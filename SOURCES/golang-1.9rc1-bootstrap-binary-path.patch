--- go/src/cmd/dist/buildtool.go.bootstrap	2017-07-24 19:38:15.000000000 +0000
+++ go/src/cmd/dist/buildtool.go	2017-08-05 09:50:58.370019772 +0000
@@ -153,18 +153,26 @@
 	defer os.Setenv("GOBIN", os.Getenv("GOBIN"))
 	os.Setenv("GOBIN", "")
 
+	hostos := os.Getenv("GOHOSTOS")
+	hostarch := os.Getenv("GOHOSTARCH")
+
 	os.Setenv("GOOS", "")
 	os.Setenv("GOHOSTOS", "")
 	os.Setenv("GOARCH", "")
 	os.Setenv("GOHOSTARCH", "")
 
+	bingopath := pathf("%s/bin/%s_%s/go", goroot_bootstrap, hostos, hostarch)
+	if _, err := os.Stat(bingopath); os.IsNotExist(err) {
+		bingopath = pathf("%s/bin/go", goroot_bootstrap)
+	}
+
 	// Run Go 1.4 to build binaries. Use -gcflags=-l to disable inlining to
 	// workaround bugs in Go 1.4's compiler. See discussion thread:
 	// https://groups.google.com/d/msg/golang-dev/Ss7mCKsvk8w/Gsq7VYI0AwAJ
 	// Use the math_big_pure_go build tag to disable the assembly in math/big
 	// which may contain unsupported instructions.
 	cmd := []string{
-		pathf("%s/bin/go", goroot_bootstrap),
+		bingopath,
 		"install",
 		"-gcflags=-l",
 		"-tags=math_big_pure_go",
@@ -173,7 +181,7 @@
 	if tool := os.Getenv("GOBOOTSTRAP_TOOLEXEC"); tool != "" {
 		cmd = append(cmd, "-toolexec="+tool)
 	}
-	cmd = append(cmd, "bootstrap/cmd/...")
+	cmd = append(cmd, "bootstrap/...")
 	run(workspace, ShowOutput|CheckExit, cmd...)
 
 	// Copy binaries into tool binary directory.
